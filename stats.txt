stats with 3 cards

['green']
0% 7% 14% 21% 28% 35% 42% 50% 57% 64% 71% 78% 85% 92%
green-int           :  82.01%(abs count =  41516 out of  50624)
yellow-int+         :  16.34%(abs count =   8274 out of  50624)
red-int+            :   1.53%(abs count =    775 out of  50624)
white-int+          :   0.12%(abs count =     59 out of  50624)
fn: 13
                  13:  100.00%(abs count =   3163 out of   3163)

fn: 19
                  19:  100.00%(abs count =   3163 out of   3163)

fn: 7
                   7:  100.00%(abs count =   3163 out of   3163)

fn: 15
                  15:  100.00%(abs count =   3163 out of   3163)

fn: min(x, 11)
                  11:  58.65%(abs count =   1855 out of   3163)
                   7:   8.54%(abs count =    270 out of   3163)
                   1:   6.04%(abs count =    191 out of   3163)
                   3:   4.33%(abs count =    137 out of   3163)
                   6:   4.33%(abs count =    137 out of   3163)

fn: if_prime
                  17:  45.05%(abs count =   1425 out of   3163)
                  15:   8.50%(abs count =    269 out of   3163)
                   1:   6.23%(abs count =    197 out of   3163)
                   6:   4.17%(abs count =    132 out of   3163)
                   9:   4.08%(abs count =    129 out of   3163)

fn: gcd(x, 24)
                   1:  43.79%(abs count =   1385 out of   3163)
                   3:  17.93%(abs count =    567 out of   3163)
                   6:  11.76%(abs count =    372 out of   3163)
                   2:  10.50%(abs count =    332 out of   3163)
                   4:   5.85%(abs count =    185 out of   3163)

fn: max(x, 9)
                   9:  40.47%(abs count =   1280 out of   3163)
                  15:   8.54%(abs count =    270 out of   3163)
                  13:   7.94%(abs count =    251 out of   3163)
                  19:   7.68%(abs count =    243 out of   3163)
                  11:   4.55%(abs count =    144 out of   3163)

fn: (x % 5) + 1
                   3:  22.67%(abs count =    717 out of   3163)
                   5:  20.64%(abs count =    653 out of   3163)
                   2:  19.51%(abs count =    617 out of   3163)
                   4:  19.00%(abs count =    601 out of   3163)
                   1:  18.18%(abs count =    575 out of   3163)

fn: ceil(x / 3)
                   5:  19.38%(abs count =    613 out of   3163)
                   3:  14.10%(abs count =    446 out of   3163)
                   1:  12.24%(abs count =    387 out of   3163)
                   7:  10.50%(abs count =    332 out of   3163)
                   4:   9.58%(abs count =    303 out of   3163)

fn: lcm(x, 6)
                   6:  18.62%(abs count =    589 out of   3164)
                  30:  15.14%(abs count =    479 out of   3164)
                  42:  11.95%(abs count =    378 out of   3164)
                  78:   9.70%(abs count =    307 out of   3164)
                 114:   8.82%(abs count =    279 out of   3164)

fn: x + 11
                  18:   9.07%(abs count =    287 out of   3163)
                  26:   8.57%(abs count =    271 out of   3163)
                  24:   8.00%(abs count =    253 out of   3163)
                  30:   7.94%(abs count =    251 out of   3163)
                  12:   6.77%(abs count =    214 out of   3163)

fn: 2 * x
                  14:   9.00%(abs count =    286 out of   3178)
                  30:   9.00%(abs count =    286 out of   3178)
                  26:   8.40%(abs count =    267 out of   3178)
                  38:   8.18%(abs count =    260 out of   3178)
                   2:   6.83%(abs count =    217 out of   3178)

fn: x + 5
                  20:   8.79%(abs count =    278 out of   3163)
                  12:   8.57%(abs count =    271 out of   3163)
                  18:   8.22%(abs count =    260 out of   3163)
                  24:   8.03%(abs count =    254 out of   3163)
                   6:   6.73%(abs count =    213 out of   3163)

fn: x - 1
                   6:   8.76%(abs count =    277 out of   3163)
                  14:   8.76%(abs count =    277 out of   3163)
                  12:   8.25%(abs count =    261 out of   3163)
                  18:   8.06%(abs count =    255 out of   3163)
                   0:   6.17%(abs count =    195 out of   3163)

fn: x
                   7:   8.50%(abs count =    269 out of   3163)
                  15:   8.50%(abs count =    269 out of   3163)
                  13:   7.87%(abs count =    249 out of   3163)
                  19:   7.65%(abs count =    242 out of   3163)
                   1:   6.17%(abs count =    195 out of   3163)

fns which produced certain result:
color: green-int     ['13', '19', 'x', 'x + 5', 'x + 11', 'x - 1', '2 * x', 'min(x, 11)', 'ceil(x / 3)', 'max(x, 9)', 'gcd(x, 24)', 'if_prime', '(x % 5) + 1', '7', 'lcm(x, 6)', '15']
color: yellow-int+   ['lcm(x, 6)', 'x + 11', '2 * x', 'x + 5', 'x', 'x - 1', 'max(x, 9)', 'if_prime', 'gcd(x, 24)', 'ceil(x / 3)', 'min(x, 11)']
color: red-int+      ['lcm(x, 6)', '2 * x', 'x', 'x + 5', 'x + 11', 'x - 1', 'max(x, 9)', 'if_prime']
color: white-int+    ['2 * x', 'lcm(x, 6)']

most common values globally:
value: 7             8.363621997471556
value: 15            8.306336915297093
value: 13            7.749288874841972
value: 19            7.539902022756005
value: 1             6.034687104930468
value: 11            4.750711125158028
value: 6             4.474162452591656
value: 3             4.211441213653603
value: 17            3.9092130214917824
value: 9             3.768963337547408
value: 2             3.5338969658659924
value: 4             3.271175726927939
value: 5             3.176359039190898
value: 12            3.0203065739570163
value: 18            2.6884481668773703
value: 30            2.441529709228824
value: 14            2.038558786346397
value: 24            1.9674462705436158
value: 8             1.615834386852086
value: 26            1.3511378002528445
value: 10            1.2286662452591655
value: 20            1.2029867256637168
value: 16            1.123972819216182
value: 22            1.118046776232617
value: 42            0.952117572692794
value: 78            0.7071744627054362
value: 38            0.6617414664981036
value: 114           0.6518647281921618
value: 0             0.5985303413400759
value: 28            0.4879108723135272
value: 66            0.4780341340075853
value: 23            0.46025600505689
value: 34            0.4207490518331226
value: 21            0.3812420986093552
value: 29            0.3753160556257901
value: 102           0.35951327433628316
value: 25            0.28445006321112515
value: 35            0.26667193426042984
value: 48            0.2646965865992415
value: 27            0.2646965865992415
['green', 'yellow']
0% 3% 6% 9% 12% 15% 18% 21% 25% 28% 31% 34% 37% 40% 43% 46% 50% 53% 56% 59% 62% 65% 68% 71% 75% 78% 81% 84% 87% 90% 93% 96%
green-int           :  41.76%(abs count = 411407 out of 985088)
yellow-int+         :  19.56%(abs count = 192710 out of 985088)
yellow-int-         :  18.34%(abs count = 180672 out of 985088)
red-int-            :   8.87%(abs count =  87335 out of 985088)
red-int+            :   5.01%(abs count =  49366 out of 985088)
white-int+          :   4.33%(abs count =  42628 out of 985088)
white-int-          :   1.82%(abs count =  17891 out of 985088)
zd                  :   0.31%(abs count =   3079 out of 985088)
fn: 13
                  13:  100.00%(abs count =  29472 out of  29472)

fn: 19
                  19:  100.00%(abs count =  29472 out of  29472)

fn: 7
                   7:  100.00%(abs count =  29472 out of  29472)

fn: 15
                  15:  100.00%(abs count =  29472 out of  29472)

fn: max(x, 9)
                   9:  55.68%(abs count =  16419 out of  29490)
                  15:   4.16%(abs count =   1228 out of  29490)
                  19:   3.89%(abs count =   1148 out of  29490)
                  13:   3.83%(abs count =   1129 out of  29490)
                  42:   2.26%(abs count =    667 out of  29490)

fn: if_greater_or_less
                  42:  47.65%(abs count =  14070 out of  29528)
                  66:  44.57%(abs count =  13160 out of  29528)
                   5:   7.78%(abs count =   2298 out of  29528)

fn: sin(pi * x / 2) - 2
                  -2:  46.55%(abs count =  13719 out of  29472)
                  -3:  28.91%(abs count =   8521 out of  29472)
                  -1:  24.54%(abs count =   7232 out of  29472)

fn: min(x, 11)
                  11:  43.49%(abs count =  12818 out of  29473)
                  -2:   4.46%(abs count =   1314 out of  29473)
                   7:   4.34%(abs count =   1278 out of  29473)
                  -3:   3.57%(abs count =   1052 out of  29473)
                   0:   3.56%(abs count =   1050 out of  29473)

fn: split_by_int
                  -3:  40.13%(abs count =  11828 out of  29472)
                  -2:  30.36%(abs count =   8948 out of  29472)
                  -1:  29.51%(abs count =   8696 out of  29472)

fn: gcd(x, 24)
                   1:  35.30%(abs count =  10403 out of  29472)
                   3:  18.00%(abs count =   5305 out of  29472)
                   2:  15.31%(abs count =   4512 out of  29472)
                   6:  11.39%(abs count =   3358 out of  29472)
                   4:   7.26%(abs count =   2140 out of  29472)

fn: if_prime
                  17:  26.47%(abs count =   7805 out of  29488)
                  -2:   4.44%(abs count =   1310 out of  29488)
                  15:   4.16%(abs count =   1226 out of  29488)
                  -3:   3.64%(abs count =   1072 out of  29488)
                   0:   3.55%(abs count =   1047 out of  29488)

fn: lcm(x, 6)
                   6:  18.70%(abs count =   6890 out of  36852)
                  30:   8.51%(abs count =   3136 out of  36852)
                  42:   7.29%(abs count =   2688 out of  36852)
                  66:   4.71%(abs count =   1736 out of  36852)
                  78:   4.31%(abs count =   1588 out of  36852)

fn: (x % 5) + 1
                   3:  21.85%(abs count =   6441 out of  29472)
                   1:  21.78%(abs count =   6418 out of  29472)
                   5:  20.33%(abs count =   5993 out of  29472)
                   4:  18.54%(abs count =   5465 out of  29472)
                   2:  17.49%(abs count =   5155 out of  29472)

fn: while_cycle
                   0:  19.97%(abs count =   5889 out of  29489)
                   2:  14.32%(abs count =   4224 out of  29489)
                   4:   9.24%(abs count =   2725 out of  29489)
                   6:   8.04%(abs count =   2371 out of  29489)
                  -2:   6.76%(abs count =   1992 out of  29489)

fn: x // -6
                  -1:  15.79%(abs count =   4653 out of  29477)
                   0:  15.16%(abs count =   4468 out of  29477)
                  -2:  12.74%(abs count =   3755 out of  29477)
                  -3:  12.39%(abs count =   3652 out of  29477)
                  -4:   7.57%(abs count =   2231 out of  29477)

fn: last_negative
                  -2:  14.14%(abs count =   4167 out of  29478)
                  -3:  12.43%(abs count =   3664 out of  29478)
                  -1:  11.92%(abs count =   3513 out of  29478)
                  -5:  11.19%(abs count =   3298 out of  29478)
                   0:  10.40%(abs count =   3065 out of  29478)

fn: x * (x // 4)
                   0:   7.52%(abs count =   3414 out of  45425)
                 420:   5.25%(abs count =   2383 out of  45425)
                 210:   3.36%(abs count =   1527 out of  45425)
                2500:   3.02%(abs count =   1372 out of  45425)
                   2:   3.00%(abs count =   1362 out of  45425)

fn: ceil(x / 3)
                   0:  11.09%(abs count =   3269 out of  29476)
                   5:   8.97%(abs count =   2644 out of  29476)
                   1:   7.89%(abs count =   2326 out of  29476)
                   3:   7.79%(abs count =   2295 out of  29476)
                   2:   6.70%(abs count =   1976 out of  29476)

fn: 100 // x
zd                  :   9.75%(abs count =   3079 out of  31592)
                   5:   6.63%(abs count =   2093 out of  31592)
                   2:   5.87%(abs count =   1856 out of  31592)
                   1:   5.81%(abs count =   1835 out of  31592)
                   0:   4.93%(abs count =   1556 out of  31592)

fn: -5 * x
                -210:   5.85%(abs count =   2433 out of  41584)
                  10:   3.28%(abs count =   1366 out of  41584)
                 -35:   3.18%(abs count =   1324 out of  41584)
                -500:   3.12%(abs count =   1297 out of  41584)
                 -75:   2.96%(abs count =   1229 out of  41584)

fn: x % 25
                   0:   5.94%(abs count =   1751 out of  29474)
                  15:   5.87%(abs count =   1730 out of  29474)
                  23:   5.72%(abs count =   1686 out of  29474)
                  19:   5.64%(abs count =   1663 out of  29474)
                   7:   5.41%(abs count =   1595 out of  29474)

fn: 151 - x
                 153:   4.40%(abs count =   1363 out of  30953)
                 144:   4.26%(abs count =   1318 out of  30953)
                 136:   4.08%(abs count =   1264 out of  30953)
                 132:   3.83%(abs count =   1184 out of  30953)
                 138:   3.76%(abs count =   1164 out of  30953)

fn: x + 11
                   9:   4.59%(abs count =   1356 out of  29561)
                  18:   4.38%(abs count =   1296 out of  29561)
                  26:   4.15%(abs count =   1228 out of  29561)
                  30:   3.92%(abs count =   1160 out of  29561)
                  24:   3.82%(abs count =   1128 out of  29561)

fn: x - 128
                -130:   4.53%(abs count =   1355 out of  29888)
                -121:   4.40%(abs count =   1316 out of  29888)
                -113:   4.23%(abs count =   1263 out of  29888)
                -109:   3.94%(abs count =   1177 out of  29888)
                -115:   3.89%(abs count =   1162 out of  29888)

fn: 38 - x
                  40:   4.59%(abs count =   1355 out of  29539)
                  31:   4.44%(abs count =   1312 out of  29539)
                  23:   4.27%(abs count =   1261 out of  29539)
                  25:   3.91%(abs count =   1154 out of  29539)
                  19:   3.89%(abs count =   1148 out of  29539)

fn: for_cycle
                  28:   4.59%(abs count =   1355 out of  29543)
                  27:   4.44%(abs count =   1311 out of  29543)
                  15:   4.16%(abs count =   1228 out of  29543)
                  59:   3.99%(abs count =   1178 out of  29543)
                  43:   3.91%(abs count =   1155 out of  29543)

fn: x - 25
                 -27:   4.58%(abs count =   1350 out of  29488)
                 -18:   4.44%(abs count =   1308 out of  29488)
                 -10:   4.29%(abs count =   1264 out of  29488)
                  -6:   4.00%(abs count =   1179 out of  29488)
                 -12:   3.93%(abs count =   1158 out of  29488)

fn: x + 5
                   3:   4.57%(abs count =   1348 out of  29525)
                  12:   4.34%(abs count =   1282 out of  29525)
                  20:   4.21%(abs count =   1242 out of  29525)
                  24:   3.96%(abs count =   1170 out of  29525)
                  18:   3.86%(abs count =   1139 out of  29525)

fn: if_equal_or_not
                 -12:   4.49%(abs count =   1324 out of  29487)
                  -3:   4.38%(abs count =   1293 out of  29487)
                   5:   4.26%(abs count =   1257 out of  29487)
                   9:   3.99%(abs count =   1178 out of  29487)
                   3:   3.93%(abs count =   1160 out of  29487)

fn: x - 1
                  -3:   4.46%(abs count =   1316 out of  29489)
                   6:   4.37%(abs count =   1289 out of  29489)
                  14:   4.23%(abs count =   1247 out of  29489)
                  18:   3.95%(abs count =   1164 out of  29489)
                  12:   3.90%(abs count =   1150 out of  29489)

fn: 2 * x
                  14:   4.17%(abs count =   1314 out of  31522)
                  -4:   4.11%(abs count =   1296 out of  31522)
                  30:   3.99%(abs count =   1259 out of  31522)
                  38:   3.74%(abs count =   1179 out of  31522)
                  26:   3.69%(abs count =   1163 out of  31522)

fn: x
                  -2:   4.45%(abs count =   1311 out of  29491)
                   7:   4.32%(abs count =   1275 out of  29491)
                  15:   4.16%(abs count =   1226 out of  29491)
                  19:   3.89%(abs count =   1147 out of  29491)
                  13:   3.82%(abs count =   1127 out of  29491)

fns which produced certain result:
color: green-int     ['13', '19', 'x', 'x + 5', 'x + 11', 'x - 1', '2 * x', 'min(x, 11)', 'ceil(x / 3)', 'max(x, 9)', 'gcd(x, 24)', 'if_prime', '(x % 5) + 1', '100 // x', 'x % 25', 'x * (x // 4)', 'while_cycle', '7', 'if_equal_or_not', '38 - x', 'for_cycle', 'x - 25', 'lcm(x, 6)', 'x // -6', 'x - 128', 'if_greater_or_less', '-5 * x', '15', '151 - x']
color: yellow-int+   ['lcm(x, 6)', '38 - x', 'if_greater_or_less', 'for_cycle', 'x + 11', '2 * x', 'x * (x // 4)', 'x + 5', 'last_negative', 'x', 'x - 1', 'max(x, 9)', 'if_prime', 'while_cycle', '100 // x', '-5 * x', 'ceil(x / 3)', 'x % 25', 'if_equal_or_not', 'x // -6', 'gcd(x, 24)', 'x - 25', '151 - x', 'x - 128', 'min(x, 11)']
color: yellow-int-   ['x - 25', 'x // -6', 'sin(pi * x / 2) - 2', 'split_by_int', 'last_negative', 'if_equal_or_not', '-5 * x', 'x', 'x + 5', 'x - 1', '2 * x', 'min(x, 11)', 'ceil(x / 3)', 'if_prime', '100 // x', 'for_cycle', 'while_cycle', '38 - x', 'x + 11', 'x - 128', '151 - x']
color: red-int-      ['x - 128', '-5 * x', 'x - 25', 'x', 'x + 5', 'x + 11', 'x - 1', 'min(x, 11)', 'ceil(x / 3)', 'if_prime', 'if_equal_or_not', 'for_cycle', 'while_cycle', '38 - x', 'x // -6', '100 // x', '2 * x', '151 - x']
color: red-int+      ['151 - x', 'lcm(x, 6)', 'x * (x // 4)', '38 - x', 'x', 'x + 5', 'x + 11', 'x - 1', 'max(x, 9)', 'if_prime', 'x - 25', 'if_equal_or_not', 'for_cycle', 'while_cycle', '2 * x', '-5 * x']
color: white-int+    ['x * (x // 4)', 'lcm(x, 6)', '151 - x', '-5 * x', '2 * x', '38 - x', 'x + 11', 'for_cycle', 'x + 5']
color: white-int-    ['2 * x', '-5 * x', 'x - 128', 'x - 25', 'if_equal_or_not', 'x - 1']
color: zd            ['100 // x']

most common values globally:
value: -2            4.1186168139293144
value: 7             4.070296257796258
value: 15            3.9669552364864864
value: 19            3.63723850051975
value: 13            3.5957193672037424
value: -3            3.5324762863825363
value: -1            3.3119883705821205
value: 0             3.286102358367984
value: 1             3.0138424181392933
value: 2             2.6199689773908523
value: 9             2.4904374025467777
value: 6             2.403846153846154
value: 3             2.285582607848233
value: 5             2.2504588422557172
value: 42            2.0999139163201663
value: 4             2.0475328092515594
value: 11            1.981853397869023
value: 66            1.776491034303534
value: 17            1.3752070880977132
value: -4            1.1294422427234927
value: 12            1.01463016502079
value: 14            0.9251965306652806
value: 10            0.9108830886174636
value: 18            0.9019498765592515
value: 8             0.8656079456860706
value: -5            0.852512668918919
value: 24            0.8521066138253639
value: -6            0.8364734927234927
value: 30            0.8053087642931392
value: 22            0.7281582965176715
value: 16            0.7269401312370062
value: 20            0.6793301715176715
value: -7            0.6148689254158004
value: -9            0.5513213032744282
value: -10           0.5432002014033264
value: -8            0.505741619022869
value: 23            0.4598573934511434
value: 26            0.41397316787941785
value: 39            0.410318672037422
value: -12           0.3946855509355509
['green', 'yellow', 'red']
0% 2% 4% 6% 8% 10% 12% 14% 16% 18% 20% 22% 25% 27% 29% 31% 33% 35% 37% 39% 41% 43% 45% 47% 50% 52% 54% 56% 58% 60% 62% 64%
 0.010970354080200195 20 ['r_multiply', 'switch_places', 'ints_from_list'] 0.39
66% 68% 70% 72% 75% 77% 79% 81% 83% 85% 87% 89% 91% 93% 95% 97%
green-int           :  29.61%(abs count = 1507541 out of 5091840)
yellow-int+         :  12.17%(abs count = 619761 out of 5091840)
yellow-int-         :  11.90%(abs count = 605815 out of 5091840)
red-float+          :   6.87%(abs count = 349562 out of 5091840)
white-int+          :   6.27%(abs count = 319018 out of 5091840)
red-int-            :   5.85%(abs count = 298039 out of 5091840)
white-inf           :   5.70%(abs count = 290142 out of 5091840)
white-float+        :   4.94%(abs count = 251603 out of 5091840)
red-float-          :   4.16%(abs count = 212065 out of 5091840)
white-float-        :   2.65%(abs count = 135134 out of 5091840)
red-int+            :   2.55%(abs count = 129589 out of 5091840)
white-int-          :   2.07%(abs count = 105263 out of 5091840)
te                  :   1.82%(abs count =  92705 out of 5091840)
re                  :   1.72%(abs count =  87597 out of 5091840)
ve                  :   1.35%(abs count =  68924 out of 5091840)
zd                  :   0.37%(abs count =  19082 out of 5091840)
fn: inf
                 inf:  100.00%(abs count = 290142 out of 290142)

fn: r_divide
re                  :  59.29%(abs count =  87597 out of 147733)
                   3:  12.40%(abs count =  18318 out of 147733)
                   2:  10.73%(abs count =  15851 out of 147733)
                   4:   6.51%(abs count =   9611 out of 147733)
                   1:   5.00%(abs count =   7384 out of 147733)

fn: 13
                  13:  100.00%(abs count =  85272 out of  85272)

fn: 19
                  19:  100.00%(abs count =  85272 out of  85272)

fn: 15
                  15:  100.00%(abs count =  85272 out of  85272)

fn: 7
                   7:  100.00%(abs count =  85224 out of  85224)

fn: floor(log2(90 - x))
                   6:  59.61%(abs count =  64185 out of 107674)
ve                  :  24.81%(abs count =  26719 out of 107674)
                   5:   6.14%(abs count =   6615 out of 107674)
                   7:   5.68%(abs count =   6114 out of 107674)
                   4:   2.32%(abs count =   2502 out of 107674)

fn: max(x, 9)
                   9:  65.16%(abs count =  55572 out of  85282)
                  15:   2.85%(abs count =   2427 out of  85282)
                  13:   2.69%(abs count =   2295 out of  85282)
                  19:   2.67%(abs count =   2274 out of  85282)
                  66:   1.53%(abs count =   1306 out of  85282)

fn: ints_from_list
te                  :  30.33%(abs count =  46375 out of 152908)
                 592:   5.92%(abs count =   9055 out of 152908)
                 648:   5.42%(abs count =   8291 out of 152908)
                 764:   4.41%(abs count =   6741 out of 152908)
                 859:   4.26%(abs count =   6520 out of 152908)

fn: int_from_list
te                  :  39.04%(abs count =  46330 out of 118658)
                   0:   7.57%(abs count =   8977 out of 118658)
                   4:   6.77%(abs count =   8039 out of 118658)
                   9:   6.65%(abs count =   7894 out of 118658)
                   2:   6.60%(abs count =   7827 out of 118658)

fn: if_greater_or_less
                  66:  51.06%(abs count =  43571 out of  85341)
                  42:  41.64%(abs count =  35533 out of  85341)
                   5:   7.31%(abs count =   6237 out of  85341)

fn: ceil(sqrt(10 + x))
ve                  :  36.15%(abs count =  42205 out of 116736)
                   4:  20.11%(abs count =  23471 out of 116736)
                   5:  12.87%(abs count =  15027 out of 116736)
                   3:   9.33%(abs count =  10889 out of 116736)
                   6:   6.28%(abs count =   7331 out of 116736)

fn: split_by_int
                  -3:  42.10%(abs count =  35879 out of  85224)
                  -1:  29.19%(abs count =  24881 out of  85224)
                  -2:  28.71%(abs count =  24464 out of  85224)

fn: sin(pi * x / 2) - 2
                  -2:  31.36%(abs count =  34495 out of 110009)
                  -3:  17.91%(abs count =  19706 out of 110009)
                  -1:  16.48%(abs count =  18127 out of 110009)
            -1.29289:  12.45%(abs count =  13692 out of 110009)
            -2.15643:   5.07%(abs count =   5582 out of 110009)

fn: min(x, 11)
                  11:  33.90%(abs count =  28925 out of  85321)
                   0:   4.36%(abs count =   3718 out of  85321)
                   6:   4.20%(abs count =   3587 out of  85321)
                   7:   3.71%(abs count =   3162 out of  85321)
                  -2:   3.36%(abs count =   2866 out of  85321)

fn: gcd(x, 24)
                   1:  29.12%(abs count =  24815 out of  85226)
                   3:  15.12%(abs count =  12883 out of  85226)
                   2:  12.11%(abs count =  10322 out of  85226)
                   6:  10.60%(abs count =   9031 out of  85226)
                   0:   8.31%(abs count =   7084 out of  85226)

fn: while_cycle
                   0:  26.41%(abs count =  22542 out of  85351)
                   2:  14.66%(abs count =  12511 out of  85351)
                   4:   8.55%(abs count =   7299 out of  85351)
                   6:   8.52%(abs count =   7274 out of  85351)
                  -2:   6.12%(abs count =   5226 out of  85351)

fn: lcm(x, 6)
                   6:  15.99%(abs count =  21145 out of 132270)
                  30:   6.09%(abs count =   8053 out of 132270)
                  42:   4.66%(abs count =   6161 out of 132270)
                  66:   3.16%(abs count =   4174 out of 132270)
                  12:   3.08%(abs count =   4071 out of 132270)

fn: x // -6
                  -1:  23.20%(abs count =  19793 out of  85318)
                   0:  16.58%(abs count =  14142 out of  85318)
                  -2:  11.60%(abs count =   9901 out of  85318)
                  -3:   8.89%(abs count =   7587 out of  85318)
                  -4:   5.59%(abs count =   4772 out of  85318)

fn: if_prime
                  17:  22.52%(abs count =  19223 out of  85370)
                   0:   4.65%(abs count =   3973 out of  85370)
                   6:   4.17%(abs count =   3559 out of  85370)
                  -2:   3.35%(abs count =   2859 out of  85370)
                  -1:   3.18%(abs count =   2716 out of  85370)

fn: (x % 5) + 1
                   1:  18.32%(abs count =  15726 out of  85848)
                   5:  17.42%(abs count =  14958 out of  85848)
                   3:  16.80%(abs count =  14423 out of  85848)
                   2:  16.48%(abs count =  14148 out of  85848)
                   4:  15.07%(abs count =  12934 out of  85848)

fn: double_r
                  -1:  17.47%(abs count =  14896 out of  85248)
                   2:  11.60%(abs count =   9892 out of  85248)
                  -2:  10.98%(abs count =   9360 out of  85248)
                   3:   9.86%(abs count =   8404 out of  85248)
                  -6:   6.62%(abs count =   5640 out of  85248)

fn: x * (x // 4)
                   0:   9.60%(abs count =  13910 out of 144821)
                 420:   3.15%(abs count =   4562 out of 144821)
                   6:   2.49%(abs count =   3612 out of 144821)
                   4:   2.27%(abs count =   3293 out of 144821)
                 210:   2.25%(abs count =   3261 out of 144821)

fn: last_negative
                   0:  13.50%(abs count =  11512 out of  85253)
                  -2:  12.39%(abs count =  10565 out of  85253)
                  -1:  12.29%(abs count =  10477 out of  85253)
                  -3:  11.53%(abs count =   9828 out of  85253)
                  -5:  10.42%(abs count =   8881 out of  85253)

fn: ceil(x / 3)
                   0:  12.65%(abs count =  10788 out of  85313)
                   1:  11.42%(abs count =   9741 out of  85313)
                   2:  10.91%(abs count =   9309 out of  85313)
                   3:   7.90%(abs count =   6738 out of  85313)
                   5:   6.47%(abs count =   5518 out of  85313)

fn: 1 / x
zd                  :   4.92%(abs count =   9748 out of 198095)
             0.16667:   3.49%(abs count =   6909 out of 198095)
             0.14286:   3.25%(abs count =   6436 out of 198095)
             0.09091:   2.61%(abs count =   5173 out of 198095)
             0.06667:   2.52%(abs count =   4993 out of 198095)

fn: 100 // x
zd                  :   9.51%(abs count =   9334 out of  98132)
                   1:   4.92%(abs count =   4833 out of  98132)
                   5:   4.19%(abs count =   4113 out of  98132)
                   0:   4.14%(abs count =   4062 out of  98132)
                   2:   3.84%(abs count =   3767 out of  98132)

fn: switch_places
                0.15:   4.90%(abs count =   7719 out of 157546)
                0.13:   3.03%(abs count =   4775 out of 157546)
                0.19:   3.01%(abs count =   4744 out of 157546)
                0.42:   2.94%(abs count =   4632 out of 157546)
                0.17:   2.55%(abs count =   4015 out of 157546)

fn: reverse
                   0:   6.77%(abs count =   6612 out of  97648)
                   1:   4.20%(abs count =   4098 out of  97648)
                   6:   3.96%(abs count =   3867 out of  97648)
                  -1:   3.72%(abs count =   3635 out of  97648)
                  -2:   3.65%(abs count =   3565 out of  97648)

fn: increment_digits
                1.11:   5.22%(abs count =   6034 out of 115559)
                7.11:   3.19%(abs count =   3691 out of 115559)
                1.61:   2.97%(abs count =   3436 out of 115559)
                8.11:   2.80%(abs count =   3238 out of 115559)
               21.11:   2.60%(abs count =   3006 out of 115559)

fn: x % 25
                   0:   5.94%(abs count =   5110 out of  85986)
                   6:   4.91%(abs count =   4219 out of  85986)
                  24:   4.55%(abs count =   3910 out of  85986)
                   7:   4.48%(abs count =   3853 out of  85986)
                  23:   4.39%(abs count =   3775 out of  85986)

fn: r_subtract
                 -54:   5.75%(abs count =   5009 out of  87066)
                   0:   4.42%(abs count =   3846 out of  87066)
                 -53:   3.76%(abs count =   3273 out of  87066)
                  -2:   3.37%(abs count =   2938 out of  87066)
                  -1:   3.29%(abs count =   2863 out of  87066)

fn: -5 * x
                -210:   3.50%(abs count =   4630 out of 132358)
                   0:   2.81%(abs count =   3721 out of 132358)
                 -30:   2.79%(abs count =   3696 out of 132358)
                 -35:   2.44%(abs count =   3236 out of 132358)
                  10:   2.23%(abs count =   2948 out of 132358)

fn: x - 128
                -128:   4.12%(abs count =   3853 out of  93485)
                -122:   3.96%(abs count =   3706 out of  93485)
                -121:   3.41%(abs count =   3189 out of  93485)
                -130:   3.15%(abs count =   2942 out of  93485)
                -129:   2.96%(abs count =   2763 out of  93485)

fn: 38 - x
                  38:   4.30%(abs count =   3844 out of  89425)
                  32:   4.12%(abs count =   3680 out of  89425)
                  31:   3.58%(abs count =   3199 out of  89425)
                  40:   3.27%(abs count =   2923 out of  89425)
                  39:   3.13%(abs count =   2795 out of  89425)

fn: x - 25
                 -25:   4.32%(abs count =   3837 out of  88856)
                 -19:   4.13%(abs count =   3667 out of  88856)
                 -18:   3.62%(abs count =   3213 out of  88856)
                 -27:   3.29%(abs count =   2927 out of  88856)
                 -26:   3.14%(abs count =   2789 out of  88856)

fn: if_equal_or_not
                 -10:   4.29%(abs count =   3819 out of  88998)
                  -4:   4.06%(abs count =   3612 out of  88998)
                  -3:   3.59%(abs count =   3194 out of  88998)
                 -12:   3.25%(abs count =   2890 out of  88998)
                 -11:   3.09%(abs count =   2753 out of  88998)

fn: 151 - x
                 151:   3.88%(abs count =   3808 out of  98049)
                 145:   3.77%(abs count =   3694 out of  98049)
                 144:   3.29%(abs count =   3225 out of  98049)
                 153:   2.98%(abs count =   2921 out of  98049)
                 152:   2.86%(abs count =   2802 out of  98049)

fn: x + 0.5
                 0.5:   4.26%(abs count =   3805 out of  89294)
                 6.5:   4.09%(abs count =   3651 out of  89294)
                 7.5:   3.62%(abs count =   3230 out of  89294)
                -1.5:   3.30%(abs count =   2947 out of  89294)
                -0.5:   3.11%(abs count =   2779 out of  89294)

fn: x + 11
                  11:   4.31%(abs count =   3801 out of  88292)
                  17:   4.12%(abs count =   3637 out of  88292)
                  18:   3.61%(abs count =   3190 out of  88292)
                   9:   3.32%(abs count =   2929 out of  88292)
                  10:   3.16%(abs count =   2787 out of  88292)

fn: x + 5
                   5:   4.28%(abs count =   3792 out of  88578)
                  11:   4.05%(abs count =   3583 out of  88578)
                  12:   3.57%(abs count =   3163 out of  88578)
                   3:   3.30%(abs count =   2922 out of  88578)
                   4:   3.13%(abs count =   2773 out of  88578)

fn: r_multiply
                   0:   2.64%(abs count =   3743 out of 141628)
                  22:   2.57%(abs count =   3634 out of 141628)
                  53:   2.24%(abs count =   3176 out of 141628)
                 261:   2.15%(abs count =   3047 out of 141628)
  -28823037615171176:   2.10%(abs count =   2970 out of 141628)

fn: for_cycle
                   0:   4.10%(abs count =   3730 out of  91077)
                  16:   4.00%(abs count =   3646 out of  91077)
                  27:   3.53%(abs count =   3218 out of  91077)
                  28:   3.22%(abs count =   2930 out of  91077)
                  39:   3.07%(abs count =   2795 out of  91077)

fn: x - 1
                  -1:   4.23%(abs count =   3729 out of  88088)
                   5:   4.07%(abs count =   3589 out of  88088)
                   6:   3.62%(abs count =   3189 out of  88088)
                  -3:   3.25%(abs count =   2860 out of  88088)
                  -2:   3.06%(abs count =   2695 out of  88088)

fn: 2 * x
                   0:   3.41%(abs count =   3725 out of 109247)
                  12:   3.30%(abs count =   3609 out of 109247)
                  14:   2.95%(abs count =   3222 out of 109247)
                  -4:   2.61%(abs count =   2849 out of 109247)
                  -2:   2.56%(abs count =   2799 out of 109247)

fn: x
                   0:   4.34%(abs count =   3701 out of  85374)
                   6:   4.19%(abs count =   3580 out of  85374)
                   7:   3.69%(abs count =   3149 out of  85374)
                  -2:   3.35%(abs count =   2858 out of  85374)
                  -1:   3.18%(abs count =   2718 out of  85374)

fn: -0.5 * x
                   0:   3.85%(abs count =   3700 out of  96046)
                  -3:   3.82%(abs count =   3666 out of  96046)
                -3.5:   3.35%(abs count =   3219 out of  96046)
                   1:   2.99%(abs count =   2876 out of  96046)
                 0.5:   2.85%(abs count =   2741 out of  96046)

fn: x / 1.5
                   0:   3.80%(abs count =   3688 out of  96927)
                   4:   3.75%(abs count =   3632 out of  96927)
             4.66667:   3.33%(abs count =   3226 out of  96927)
            -1.33333:   2.97%(abs count =   2875 out of  96927)
            -0.66667:   2.88%(abs count =   2787 out of  96927)

fns which produced certain result:
color: green-int     ['13', '19', 'x', 'x + 5', 'x + 11', 'x - 1', '2 * x', 'min(x, 11)', 'ceil(x / 3)', 'max(x, 9)', 'gcd(x, 24)', 'if_prime', '(x % 5) + 1', '100 // x', 'x % 25', 'x * (x // 4)', 'while_cycle', 'ceil(sqrt(10 + x))', 'floor(log2(90 - x))', 'int_from_list', 'reverse', 'r_divide', '7', 'if_equal_or_not', '38 - x', 'ints_from_list', 'for_cycle', 'x / 1.5', 'x - 25', 'lcm(x, 6)', '1 / x', 'r_multiply', 'x // -6', '-0.5 * x', 'double_r', 'x - 128', 'if_greater_or_less', '-5 * x', '15', '151 - x', 'switch_places', 'x + 0.5']
color: yellow-int+   ['lcm(x, 6)', '38 - x', 'if_greater_or_less', 'for_cycle', 'ints_from_list', 'r_multiply', 'x + 11', '2 * x', 'x * (x // 4)', 'reverse', 'x + 5', 'int_from_list', 'last_negative', 'x', 'x - 1', 'max(x, 9)', 'if_prime', 'while_cycle', '100 // x', '-5 * x', 'ceil(sqrt(10 + x))', 'ceil(x / 3)', 'x % 25', 'if_equal_or_not', 'x / 1.5', 'x // -6', 'gcd(x, 24)', 'x - 25', '151 - x', 'min(x, 11)', '-0.5 * x', 'switch_places', 'r_subtract', 'r_divide', 'double_r', 'x - 128', 'x + 0.5', 'floor(log2(90 - x))']
color: yellow-int-   ['x - 25', 'x // -6', 'sin(pi * x / 2) - 2', 'split_by_int', 'last_negative', 'if_equal_or_not', 'double_r', '-0.5 * x', '-5 * x', 'x', 'x + 5', 'x - 1', '2 * x', 'min(x, 11)', 'ceil(x / 3)', 'if_prime', '100 // x', 'for_cycle', 'while_cycle', 'reverse', 'r_subtract', 'x / 1.5', '38 - x', 'x + 0.5', '1 / x', 'r_multiply', 'x - 128', 'x + 11', 'switch_places', '151 - x', 'floor(log2(90 - x))']
color: red-int-      ['x - 128', '-5 * x', 'r_subtract', 'x - 25', 'r_multiply', 'x', 'x + 5', 'x + 11', 'x - 1', 'min(x, 11)', 'ceil(x / 3)', 'if_prime', 'if_equal_or_not', 'for_cycle', 'while_cycle', '38 - x', 'x // -6', '-0.5 * x', '100 // x', '2 * x', 'x / 1.5', 'reverse', 'switch_places', '151 - x', 'x + 0.5', 'double_r']
color: red-int+      ['151 - x', 'r_multiply', 'lcm(x, 6)', 'ints_from_list', 'x * (x // 4)', '38 - x', 'x', 'x + 5', 'x + 11', 'x - 1', 'max(x, 9)', 'if_prime', 'x - 25', 'if_equal_or_not', 'for_cycle', 'while_cycle', '2 * x', '100 // x', 'reverse', '-5 * x', 'x / 1.5', 'ceil(x / 3)', 'x // -6', 'x + 0.5']
color: red-float+    ['x + 0.5', 'x / 1.5', 'switch_places', 'increment_digits', '1 / x', '-0.5 * x', 'x', 'x + 5', 'x + 11', 'x - 1', 'max(x, 9)', 'gcd(x, 24)', 'if_prime', '(x % 5) + 1', '151 - x', '38 - x', 'x % 25', 'x * (x // 4)', 'if_equal_or_not', 'for_cycle', '-5 * x', '2 * x', 'x - 25', 'min(x, 11)', 'double_r', 'x - 128']
color: red-float-    ['-0.5 * x', 'x + 0.5', 'x / 1.5', '1 / x', 'switch_places', 'increment_digits', 'x - 25', 'x - 128', '-5 * x', 'sin(pi * x / 2) - 2', 'r_subtract', 'x', 'x + 5', 'x - 1', 'min(x, 11)', 'if_prime', 'if_equal_or_not', 'double_r', 'for_cycle', 'x + 11', '2 * x', '38 - x', '151 - x']
color: white-float+  ['1 / x', 'switch_places', 'increment_digits', '151 - x', '38 - x', 'x + 0.5', 'x / 1.5', '-5 * x', 'for_cycle', 'x % 25', 'x * (x // 4)', '-0.5 * x', 'x + 5', 'x + 11', '(x % 5) + 1', '2 * x', 'x - 1', 'if_equal_or_not', 'x - 128', 'x - 25']
color: white-inf     ['inf']
color: white-int+    ['ints_from_list', 'x * (x // 4)', 'lcm(x, 6)', '151 - x', '-5 * x', '2 * x', 'reverse', 'r_multiply', '38 - x', '100 // x', 'ceil(x / 3)', 'while_cycle', 'x / 1.5', 'x + 5', 'x + 11', 'for_cycle', 'x + 0.5', 'x // -6']
color: re            ['r_divide']
color: white-int-    ['2 * x', 'reverse', 'r_multiply', '-5 * x', 'x - 128', 'x - 25', 'if_equal_or_not', 'x - 1', '100 // x', 'x // -6', 'ceil(x / 3)', 'while_cycle', 'x + 0.5', 'x / 1.5']
color: ve            ['ceil(sqrt(10 + x))', 'floor(log2(90 - x))']
color: white-float-  ['1 / x', 'sin(pi * x / 2) - 2', 'increment_digits', 'x - 128', '-0.5 * x', 'r_subtract', 'switch_places', 'x - 25', '-5 * x', 'if_equal_or_not', 'x + 0.5', '2 * x', 'x / 1.5', 'x - 1', 'for_cycle', 'x + 11', '38 - x', 'x + 5', '151 - x']
color: te            ['int_from_list', 'ints_from_list']
color: zd            ['100 // x', '1 / x']

most common values globally:
value: inf           5.698175904977376
value: 0             3.229991515837104
value: 6             3.2289309954751135
value: 7             2.6969818376068377
value: -2            2.4758240635997986
value: -1            2.429593231523379
value: 2             2.3021147561588737
value: 1             2.1715725553041727
value: 4             2.13698780794369
value: 15            2.0915621857717444
value: 3             2.0818800276520864
value: 5             2.0585485796882854
value: -3            2.0489842571644044
value: 13            1.982387506284565
value: 19            1.9380420437405732
value: 9             1.8663194444444444
value: te            1.8206581510809454
value: re            1.7203407805429864
value: ve            1.3536167672197084
value: 66            1.0931019042232277
value: 11            0.9912526709401709
value: 42            0.9727721216691805
value: -4            0.7523410005027652
value: 8             0.7510448089492208
value: 17            0.6851550716440422
value: -6            0.616555115635998
value: -5            0.557048139768728
value: 12            0.5261162958773253
value: 10            0.503216911764706
value: 14            0.43218168677727503
value: 16            0.4296089429361489
value: 30            0.42882337229763706
value: -7            0.42041776646556056
value: 24            0.4178057440925088
value: 18            0.41470274007038715
value: 22            0.39783261060834585
value: -9            0.38665786827551535
value: -10           0.3857741013071896
value: 0.5           0.3748350301659125
value: zd            0.37475647310206134



Process finished with exit code 0
